- @title = journal.prefixedTitle
- @description = journal.synopsis

article#entry
  header
    h1
      a.color href==journal.href rel="bookmark" title="link to this post" #{journal.title}
    #author.color
      strong by #{journal.author.name}
    - if !request.xhr?
      time datetime==journal.ymd
        ==journal.monthAbbr
        .day==journal.day
        ==journal.year
    .bar.clear
    - if defined?(filedUnder)
      aside.filedunder
        a href==filedUnder[:href] title="#{filedUnder[:name]} Table of Contents"
          ' ...filed under #{defined?(search) ? "the search " : nil}<strong>#{filedUnder[:name]}</strong>
        a.x title="leave this section" href==journal.href x

  .entry
    == journal.body

  footer
    section#pagination
      .older
        strong Previous#{defined?(filedUnder) && !defined?(search) ? " #{filedUnder[:name]}" : nil} Entry
        br
        - if initEntry[:prev]
          a href==initEntry[:prev][:href] title=initEntry[:prev][:title]
            ==initEntry[:prev][:title]
        - else
          |-


      .onthisday
        strong In Years Past and Future
        br
        - if defined?(onThisDay)
          - for entry in onThisDay
            a href=entry.href title==entry.title #{entry.year} - #{entry.title}
            br
        - else
          |-

      .newer
        strong Next#{defined?(filedUnder) && !defined?(search) ? " #{filedUnder[:name]}" : nil} Entry
        br
        - if initEntry[:next]
          a href==initEntry[:next][:href] title=initEntry[:next][:title]
            ==initEntry[:next][:title]
        - else
          |-

    section#meta
      a.rating href="/rating/#{journal.rating.name}" title="this entry is rated #{journal.rating[:display]}"
        ==journal.rating[:display]

    section#topics
      strong Topics:
      ul
        - for topic in journal.topics
          li
            a href==topic.href #{topic.name}

    section#comments.nobar
      a name="comments"
      - if comments.length > 0
        h4 #{comments.length} comment#{comments.length > 1 ? "s" : ""}
      dl
        == partial :journal_comment, :collection => comments
      == partial :journal_comment_form, :locals => { :journal => journal }

- content_for :initJournal do
  javascript:
    $(function(){
      gs.photos.initEffects($('#journal'));
      gs.bookmark.initEntry(#{initEntry[:id]});
      gs.journal.initEntry(#{{initEntry.to_json}});
    });
    #{{journal.js}}

- for widget in journal.widgets
  - content_for :initJournal do
    ==widget.code

- if request.xhr?
  == yield_content :initJournal
